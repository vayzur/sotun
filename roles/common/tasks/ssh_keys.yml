---
- name: Generate ssh keys on control node
  delegate_to: localhost
  run_once: true
  become: false
  command: >
    ssh-keygen -t ed25519 -f {{ private_key_path }} -N "" -q
  args:
    creates: "{{ private_key_path }}"

- name: Read private key from control node
  delegate_to: localhost
  run_once: true
  become: false
  slurp:
    src: "{{ private_key_path }}"
  register: private_key_b64

- name: Read public key from control node
  delegate_to: localhost
  run_once: true
  become: false
  slurp:
    src: "{{ private_key_path }}.pub"
  register: public_key_b64

- name: Set ssh keys as facts
  set_fact:
    private_key: "{{ private_key_b64.content | b64decode }}"
    public_key: "{{ public_key_b64.content | b64decode }}"

- name: Ensure .ssh directory exists for tunnel user
  file:
    path: "/home/{{ tunnel_user }}/.ssh"
    state: directory
    mode: 0700
    owner: "{{ tunnel_user }}"
    group: "{{ tunnel_user }}"

- name: Deploy private key
  copy:
    content: "{{ private_key }}"
    dest: "/home/{{ tunnel_user }}/.ssh/sotun_ed25519"
    owner: "{{ tunnel_user }}"
    group: "{{ tunnel_user }}"
    mode: 0600
    backup: true

- name: Deploy public key
  copy:
    content: "{{ public_key }}"
    dest: "/home/{{ tunnel_user }}/.ssh/sotun_ed25519.pub"
    owner: "{{ tunnel_user }}"
    group: "{{ tunnel_user }}"
    mode: 0644
    backup: true

- name: Add public key to authorized_keys
  authorized_key:
    user: "{{ tunnel_user }}"
    key: "{{ public_key }}"
    state: present
